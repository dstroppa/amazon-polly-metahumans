AWSTemplateFormatVersion: 2010-09-09
Description: Unreal Engine 4 Development Workstation

Parameters:

  KeyPairName:
    Description: Keypair associated with the EC2 instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    MinLength: '1'
    ConstraintDescription: Must provide a keypair to be associated with the EC2 instance

  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: g4dn.4xlarge
    AllowedValues:
      - g4dn.xlarge
      - g4dn.2xlarge
      - g4dn.4xlarge
      - g4dn.8xlarge
      - g4dn.12xlarge
      - g4dn.16xlarge

  DiskSize:
    Description: Disk size in GB
    Type: Number
    Default: '100'
    MinValue: '50'

  UserPasswd:
    Description: >-
      Password for the "Administrator" user on Windows instances. The default password is Ch4ng3M3! 
    Default: Ch4ng3M3!
    MinLength: '8'
    Type: String
    AllowedPattern: >-
      ^((?=.*[a-z])(?=.*[A-Z])(?=.*[\d])|(?=.*[a-z])(?=.*[A-Z])(?=.*[\W_])|(?=.*[a-z])(?=.*[\d])(?=.*[\W_])|(?=.*[A-Z])(?=.*[\d])(?=.*[\W_])).+$
    ConstraintDescription: >-
      Password must contain at least one element from three of the following
      sets: lowercase letters, uppercase letters, base 10 digits,
      non-alphanumeric characters
    NoEcho: 'true'

  PixelStreamingAccessCIDR:
    Description: CIDR Block from which the Pixel Streaming Server will be accessible.
    Default: 0.0.0.0/0
    Type: String
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-32

  NiceDCVAccessCIDR:
    Description: CIDR Block from which the NICE DCV Remote Desktop will be accessible.
    Default: 0.0.0.0/0
    Type: String
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-32

  RDPSSHAccessCIDR:
    Description: CIDR Block from which SSH and RDP will be accessible.
    Default: 0.0.0.0/0
    Type: String
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-32

  LatestWindows2019AmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base

Mappings:
  VersionMap:
    firefox:
      default: Firefox_Setup_57.0.exe

Resources:

  WindowsUEDeveloperInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref RootInstanceProfile
      ImageId: !Ref LatestWindows2019AmiId
      SecurityGroupIds:
        - !Ref DCVSecurityGroup
      Tags:
        - Key: RemoteVisualization
          Value: DCV-preview
        - Key: Name
          Value: !Ref 'AWS::StackName'
        - Key: DCV
          Value: DCV
      KeyName: !Ref KeyPairName
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: !Ref DiskSize
            VolumeType: gp2
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              <script>
            - 'cfn-init.exe -v '
            - ' -c initialize '
            - ' -r WindowsUEDeveloperInstance '
            - ' --region '
            - !Ref 'AWS::Region'
            - ' -s '
            - !Ref 'AWS::StackName'
            - |+

            - |
              </script>
    Metadata:
      'AWS::CloudFormation::Authentication':
        S3AccessCreds:
          type: S3
          roleName: !Ref RootRole
      'AWS::CloudFormation::Init':
        configSets:
          initialize:
            - download
            - install
            - restart
        download:
          files:
            'C:\dcv-install\install.ps1':
              source: !Join 
                - ''
                - - >-
                    https://s3-eu-west-1.amazonaws.com/nice-dcv-cfn/dcv-server-install.ps1
              authentication: S3AccessCreds
            'C:\dcv-install\conf.ps1':
              content: !Join 
                - ''
                - - "$dcvBucket = \"nice-dcv-cfn\"\r\n"
                  - "$depBucket = \"nice-dcv-cfn\"\r\n"
                  - "$devConPackage = \"DevCon.zip\"\r\n"
                  - "$dcvPackageName = \"nice-dcv-server-x64-Release-2020.0-latest.msi\"\r\n"
                  - $firefoxPackage = "
                  - !FindInMap 
                    - VersionMap
                    - firefox
                    - default
                  - "\"\r\n"
                  - "$userName = \"Administrator\"\r\n"
                  - $userPasswd = "
                  - !Ref UserPasswd
                  - "\"\r\n"
                  - "$logLevel = \"info\"\r\n"
                  - $waitHandle = "
                  - !Ref InstanceWaitHandle
                  - "\"\r\n"
                  - $windowsVersion = "
                  - WindowsServer2019
                  - "\"\r\n"
          services:
            windows:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - 'c:\cfn\cfn-hup.conf'
                  - 'c:\cfn\hooks.d\cfn-auto-reloader.conf'
              audiosrv:
                enabled: 'true'
                ensureRunning: 'true'
          packages:
            msi:
              awscli: 'https://s3.amazonaws.com/aws-cli/AWSCLI64.msi'
              awstools: >-
                http://sdk-for-net.amazonwebservices.com/latest/AWSToolsAndSDKForNet.msi
        install:
          commands:
            install-dcv:
              command: >-
                powershell.exe -noprofile -executionpolicy bypass
                C:\dcv-install\install.ps1 > C:\dcv-install\install.log
              waitAfterCompletion: '0'
              ignoreErrors: 'true'
        restart:
          commands:
            restart:
              command: 'shutdown /r /t 10 /d p:4:1 /c "CloudFormation Restart"'
              waitAfterCompletion: forever
  
  RootRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /

  RolePolicies:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: DcvInstallAccess
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'logs:*'
              - 's3:*'
            Resource: '*'
          - Effect: Allow
            Action:
              - 's3:GetObject'
            Resource: 'arn:aws:s3:::nice-dcv-cfn/*'
      Roles:
        - !Ref RootRole

  RootInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref RootRole

  WindowsInstanceWaitCondition:
    Type: 'AWS::CloudFormation::WaitCondition'
    DependsOn: WindowsUEDeveloperInstance
    Properties:
      Handle: !Ref InstanceWaitHandle
      Timeout: '5400'

  InstanceWaitHandle:
    Type: 'AWS::CloudFormation::WaitConditionHandle'

  DCVSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: DCV Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref RDPSSHAccessCIDR
          Description: SSH Port
        - IpProtocol: tcp
          FromPort: '3389'
          ToPort: '3389'
          CidrIp: !Ref RDPSSHAccessCIDR
          Description: Remote Desktop Port
        - IpProtocol: tcp
          FromPort: '8443'
          ToPort: '8443'
          CidrIp: !Ref NiceDCVAccessCIDR
          Description: NICE DCV Port
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: !Ref PixelStreamingAccessCIDR
          Description: UE4 Pixel Streamer - Webserver Port
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: !Ref PixelStreamingAccessCIDR
          Description: UE4 Pixel Streamer - Secure Webserver Port
        - IpProtocol: tcp
          FromPort: '8888'
          ToPort: '8888'
          CidrIp: !Ref PixelStreamingAccessCIDR
          Description: UE4 Pixel Streamer - Application Streaming Port
        - IpProtocol: udp
          FromPort: '8888'
          ToPort: '8888'
          CidrIp: !Ref PixelStreamingAccessCIDR
          Description: UE4 Pixel Streamer - Application Streaming Port
        - IpProtocol: tcp
          FromPort: '19302'
          ToPort: '19303'
          CidrIp: !Ref PixelStreamingAccessCIDR
          Description: UE4 Pixel Streamer - STUN/TURN Ports
        - IpProtocol: udp
          FromPort: '19302'
          ToPort: '19303'
          CidrIp: !Ref PixelStreamingAccessCIDR
          Description: UE4 Pixel Streamer - STUN/TURN Ports

Outputs:

  WindowsInstanceId:
    Value: !Ref WindowsUEDeveloperInstance
    Description: Instance ID for the newly created EC2 instance

  WindowsPublicDNS:
    Value: !GetAtt 
      - WindowsUEDeveloperInstance
      - PublicDnsName
    Description: >-
      Web URL for Streaming Server, using DNS Name of the newly created EC2 instance

  WindowsPublicIp:
    Value: !GetAtt 
      - WindowsUEDeveloperInstance
      - PublicIp
    Description: Public IP address of the newly created EC2 instance

  WindowsDcvURL:
    Value: !Join 
      - ''
      - - 'https://'
        - !GetAtt 
          - WindowsUEDeveloperInstance
          - PublicIp
        - ':8443'
    Description: >-
      Connection URL for web access to the newly created EC2 instance via NICE DCV

Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: EC2
        Parameters:
          - InstanceType
          - DiskSize
          - KeyPairName
      - Label:
          default: Credentials
        Parameters:
          - UserPasswd
      - Label:
          default: UE Developer Workstation Properties
        Parameters:
          - PixelStreamingAccessCIDR
          - NiceDCVAccessCIDR
          - RDPSSHAccessCIDR
    ParameterLabels:
      InstanceType:
        default: 'Instance Type:'
      DiskSize:
        default: 'Disk Size:'
      KeyPairName:
        default: 'Key pair name:'
      UserPasswd:
        default: 'Password:'
      PixelStreamingAccessCIDR:
        default: 'Pixel Streaming Access CIDR:'
      NiceDCVAccessCIDR:
        default: 'NICE DCV Access CIDR:'
      RDPSSHAccessCIDR:
        default: 'RDP/SSH Access CIDR:'
